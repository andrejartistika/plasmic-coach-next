// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oVWAucqWj6DsPJvsydPAdo
// Component: 0oM51bbri1e3eB
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import ReusableHeader from "../../ReusableHeader"; // plasmic-import: HYxHqp5lqPNvYs/component
import Footer from "../../Footer"; // plasmic-import: hqPlJbMpP0AGl0/component

import { useScreenVariants as useScreenVariantsvsF6OfTsfNeByl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: VsF6OfTsfNeBYL/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_coach_website.module.css"; // plasmic-import: oVWAucqWj6DsPJvsydPAdo/projectcss
import sty from "./PlasmicIndustryLuxuryGoods.module.css"; // plasmic-import: 0oM51bbri1e3eB/css

export type PlasmicIndustryLuxuryGoods__VariantMembers = {};
export type PlasmicIndustryLuxuryGoods__VariantsArgs = {};
type VariantPropType = keyof PlasmicIndustryLuxuryGoods__VariantsArgs;
export const PlasmicIndustryLuxuryGoods__VariantProps =
  new Array<VariantPropType>();

export type PlasmicIndustryLuxuryGoods__ArgsType = {};
type ArgPropType = keyof PlasmicIndustryLuxuryGoods__ArgsType;
export const PlasmicIndustryLuxuryGoods__ArgProps = new Array<ArgPropType>();

export type PlasmicIndustryLuxuryGoods__OverridesType = {
  root?: p.Flex<"div">;
  reusableHeader?: p.Flex<typeof ReusableHeader>;
  hero?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  section1?: p.Flex<"div">;
  section2?: p.Flex<"div">;
  section3?: p.Flex<"div">;
  section4?: p.Flex<"div">;
  section5?: p.Flex<"div">;
  cta2?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultIndustryLuxuryGoodsProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicIndustryLuxuryGoods__RenderFunc(props: {
  variants: PlasmicIndustryLuxuryGoods__VariantsArgs;
  args: PlasmicIndustryLuxuryGoods__ArgsType;
  overrides: PlasmicIndustryLuxuryGoods__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsvsF6OfTsfNeByl()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__gU3Jq)} />

          <ReusableHeader
            data-plasmic-name={"reusableHeader"}
            data-plasmic-override={overrides.reusableHeader}
            className={classNames("__wab_instance", sty.reusableHeader)}
          />

          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__txLoa)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__daMe)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__te4Uk)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rrkzp)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__qqNlr)}
                      displayHeight={"35px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"35px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_coach_website/images/industryIconsLuxurygoodspng.png",
                        fullWidth: 225,
                        fullHeight: 225,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vEmC7
                      )}
                    >
                      {"COACH FOR LUXURY GOODS"}
                    </div>
                  </p.Stack>

                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Deliver exceptional customer service and"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#3E7CB1" }}
                      >
                        {"drive sales"}
                      </span>
                    </React.Fragment>
                  </h1>
                </p.Stack>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sMluU
                  )}
                >
                  {
                    "Ensure your employees exceed in selling highly attractive products and help them maintain valuable customer relations."
                  }
                </div>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__rJ7Id
                  )}
                  component={Link}
                  href={"https://calendly.com/kalina-t/30min" as const}
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__k3V8X
                    )}
                  >
                    {"BOOK A DEMO"}
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__inTNb)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"15px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_coach_website/images/buttonCaretWhitesvg2.svg",
                      fullWidth: 108,
                      fullHeight: 150,
                      aspectRatio: 0.722222
                    }}
                  />
                </p.Stack>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.column__vkFRy)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sZtl2)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/illustrationBannerLuxuryGoodspng.png",
                    fullWidth: 921,
                    fullHeight: 761,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </div>

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__tn4Ry)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"100%" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/copy_of_coach_website/images/crookedBg3Svg.svg",
              fullWidth: 300,
              fullHeight: 14,
              aspectRatio: 20.869565
            }}
          />

          <div
            data-plasmic-name={"section1"}
            data-plasmic-override={overrides.section1}
            className={classNames(projectcss.all, sty.section1)}
          >
            <div className={classNames(projectcss.all, sty.columns__desU)}>
              <div className={classNames(projectcss.all, sty.column__upKzG)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ejyBf
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "Luxury goods companies have a reputation to uphold - one of sophistication, quality, and exceptional customer service. At the core of delivering this experience is a team of well-trained employees.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Coach"}
                      </span>
                      <React.Fragment>
                        {
                          " provides comprehensive training platform for employees, that can cover everything from product knowledge to customer service etiquette. \n\nOur goal is to arm your team with the skills and confidence they need to deliver the ultimate luxury experience."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "Luxury goods companies have a reputation to uphold - one of sophistication, quality, and exceptional customer service. At the core of delivering this experience is a team of well-trained employees.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Coach"}
                      </span>
                      <React.Fragment>
                        {
                          " provides comprehensive training platform for employees, that can cover everything from product knowledge to customer service etiquette. \n\nOur goal is to arm your team with the skills and confidence they need to deliver the ultimate luxury experience."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  )}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___095Ym
                  )}
                >
                  {"HOW CAN THE INDUSTRY BENEFIT FROM USING COACH?"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___0ErVu)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__oUnXl)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("100%" as const)
                      : ("282px" as const)
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/luxury1Png2.png",
                    fullWidth: 860,
                    fullHeight: 603,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"section2"}
            data-plasmic-override={overrides.section2}
            className={classNames(projectcss.all, sty.section2)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___2Yys)}
            >
              <div className={classNames(projectcss.all, sty.column___9VGsy)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__zXyYn)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"450px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/webSalesTrainingpng.png",
                    fullWidth: 900,
                    fullHeight: 981,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__awKDz)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cPhrI
                  )}
                >
                  {"Sales Training"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xKeip
                  )}
                >
                  {
                    "Success in the luxury goods industry starts with your employees. They are the face of your brand and their level of knowledge and customer service skills can make all the difference. \n\nThat's why sales training is essential.\n\nMaximize your sales potential with Coach's training approach designed to fit into even the busiest of schedules. Using small, bite-sized learning sessions, your employees can improve their skills and become more successful individuals, without sacrificing valuable work time.\n\n "
                  }
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__wgTm2)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"100%" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/copy_of_coach_website/images/crookedBg4Svg.svg",
              fullWidth: 300,
              fullHeight: 14,
              aspectRatio: 20.869565
            }}
          />

          <div
            data-plasmic-name={"section3"}
            data-plasmic-override={overrides.section3}
            className={classNames(projectcss.all, sty.section3)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___8PIgV)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__qdVgm)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zUsV8
                  )}
                >
                  {"Product Training"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dyc1S
                  )}
                >
                  {
                    "Customers expect employees to be experts on the products they're selling, and having that expertise can make all the difference in closing a sale.\n\nWith Coach, your employees will receive comprehensive training on each product, ensuring they are equipped with the correct information and ready to position themselves as experts.\n\nBut we don't stop there. Our platform is designed to regularly refresh employee knowledge, so that they always stay up-to-date with the latest products. It's a quick and efficient way to maintain your competitive edge."
                  }
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.column__hUFsU)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__w17Cf)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"450px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/webLuxuryProductpng.png",
                    fullWidth: 901,
                    fullHeight: 981,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </div>

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__roViv)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"100%" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/copy_of_coach_website/images/crookedBg3Svg.svg",
              fullWidth: 300,
              fullHeight: 14,
              aspectRatio: 20.869565
            }}
          />

          <div
            data-plasmic-name={"section4"}
            data-plasmic-override={overrides.section4}
            className={classNames(projectcss.all, sty.section4)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__jHhTm)}
            >
              <div className={classNames(projectcss.all, sty.column__m2HcC)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__zi4NX)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"450px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/webCustomerRelationspng.png",
                    fullWidth: 900,
                    fullHeight: 981,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__t04F1)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pdWdl
                  )}
                >
                  {"Customer Relations Training"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9BTxp
                  )}
                >
                  {
                    "Creating a personal connection with customers is crucial for building brand loyalty and driving sales. \n\nCoach helps employees improve their ability to provide positive experiences, strengthening the connection with customers.\n\nOur personalization algorithm ensures that each employee's training experience is tailored to their individual needs. \nThis means that Coach focuses on improving the weak points of each employee, leading to more well-rounded and confident customer interactions."
                  }
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__jOTpX)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"100%" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/copy_of_coach_website/images/crookedBg4Svg.svg",
              fullWidth: 300,
              fullHeight: 14,
              aspectRatio: 20.869565
            }}
          />

          <div
            data-plasmic-name={"section5"}
            data-plasmic-override={overrides.section5}
            className={classNames(projectcss.all, sty.section5)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__o8Vx1)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___6NEd)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8MNTy
                  )}
                >
                  {"Onboarding"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dztTt
                  )}
                >
                  {
                    "Getting new hires up to speed quickly is vital for any organization. \n\nCoach uses a series of short, microlearning sessions that can be accessed at any time. This makes it easy for new hires to master your products quickly and efficiently.\n\nNot only does this help new hires hit the ground running, but it also increases overall productivity by allowing for learning during downtime, when there are no customers around."
                  }
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.column__rvwRk)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nKxNn)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"450px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/webOnboardingTrainingpng.png",
                    fullWidth: 900,
                    fullHeight: 980,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"cta2"}
            data-plasmic-override={overrides.cta2}
            hasGap={true}
            className={classNames(projectcss.all, sty.cta2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vByov
              )}
            >
              {"READY TO START?"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__k3HAo
              )}
            >
              {
                "Experience the full power of Coach in action, and see why microlearning is your company’s future."
              }
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d5BmQ)}
            >
              <p.Stack
                as={p.PlasmicLink}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__u8KD
                )}
                component={Link}
                href={"https://calendly.com/kalina-t/30min" as const}
                platform={"nextjs"}
                target={"_blank" as const}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sKen
                  )}
                >
                  {"GET STARTED"}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gcPpS)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"15px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_coach_website/images/buttonCaretWhitesvg2.svg",
                    fullWidth: 108,
                    fullHeight: 150,
                    aspectRatio: 0.722222
                  }}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "reusableHeader",
    "hero",
    "h1",
    "section1",
    "section2",
    "section3",
    "section4",
    "section5",
    "cta2",
    "footer"
  ],
  reusableHeader: ["reusableHeader"],
  hero: ["hero", "h1"],
  h1: ["h1"],
  section1: ["section1"],
  section2: ["section2"],
  section3: ["section3"],
  section4: ["section4"],
  section5: ["section5"],
  cta2: ["cta2"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  reusableHeader: typeof ReusableHeader;
  hero: "div";
  h1: "h1";
  section1: "div";
  section2: "div";
  section3: "div";
  section4: "div";
  section5: "div";
  cta2: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIndustryLuxuryGoods__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIndustryLuxuryGoods__VariantsArgs;
    args?: PlasmicIndustryLuxuryGoods__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicIndustryLuxuryGoods__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicIndustryLuxuryGoods__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicIndustryLuxuryGoods__ArgProps,
          internalVariantPropNames: PlasmicIndustryLuxuryGoods__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicIndustryLuxuryGoods__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicIndustryLuxuryGoods";
  } else {
    func.displayName = `PlasmicIndustryLuxuryGoods.${nodeName}`;
  }
  return func;
}

export const PlasmicIndustryLuxuryGoods = Object.assign(
  // Top-level PlasmicIndustryLuxuryGoods renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    reusableHeader: makeNodeComponent("reusableHeader"),
    hero: makeNodeComponent("hero"),
    h1: makeNodeComponent("h1"),
    section1: makeNodeComponent("section1"),
    section2: makeNodeComponent("section2"),
    section3: makeNodeComponent("section3"),
    section4: makeNodeComponent("section4"),
    section5: makeNodeComponent("section5"),
    cta2: makeNodeComponent("cta2"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicIndustryLuxuryGoods
    internalVariantProps: PlasmicIndustryLuxuryGoods__VariantProps,
    internalArgProps: PlasmicIndustryLuxuryGoods__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicIndustryLuxuryGoods;
/* prettier-ignore-end */
