// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oVWAucqWj6DsPJvsydPAdo
// Component: hqPlJbMpP0AGl0
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantsvsF6OfTsfNeByl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: VsF6OfTsfNeBYL/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_coach_website.module.css"; // plasmic-import: oVWAucqWj6DsPJvsydPAdo/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: hqPlJbMpP0AGl0/css

import FooterIconFbsvgIcon from "./icons/PlasmicIcon__FooterIconFbsvg"; // plasmic-import: ueOm1hEkZDRWuu/icon
import FooterIconInstagramsvgIcon from "./icons/PlasmicIcon__FooterIconInstagramsvg"; // plasmic-import: SoRBO6E-YKCesH/icon
import FooterIconLinkedinsvgIcon from "./icons/PlasmicIcon__FooterIconLinkedinsvg"; // plasmic-import: z30TS1rG4o-u45/icon

export type PlasmicFooter__VariantMembers = {};
export type PlasmicFooter__VariantsArgs = {};
type VariantPropType = keyof PlasmicFooter__VariantsArgs;
export const PlasmicFooter__VariantProps = new Array<VariantPropType>();

export type PlasmicFooter__ArgsType = {};
type ArgPropType = keyof PlasmicFooter__ArgsType;
export const PlasmicFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicFooter__OverridesType = {
  root?: p.Flex<"div">;
  columns?: p.Flex<"div">;
};

export interface DefaultFooterProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicFooter__RenderFunc(props: {
  variants: PlasmicFooter__VariantsArgs;
  args: PlasmicFooter__ArgsType;
  overrides: PlasmicFooter__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsvsF6OfTsfNeByl()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"columns"}
        data-plasmic-override={overrides.columns}
        hasGap={true}
        className={classNames(projectcss.all, sty.columns)}
      >
        <div className={classNames(projectcss.all, sty.column__cnN7Q)}>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__tBRv)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tFdvj)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__qNbGp)}
                displayHeight={"40px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"130px" as const}
                src={{
                  src: "/plasmic/copy_of_coach_website/images/coachlogoBlacksvg.svg",
                  fullWidth: 300,
                  fullHeight: 99,
                  aspectRatio: 3.02439
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6KKU
                )}
              >
                {
                  "Coach helps you create and deliver\npersonalized reinforcement training, fast."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__k87Tk)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gx1Se
                )}
              >
                {"GET OUR APP"}
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jtug0)}
              >
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___8Jn3Y
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__cIvn6
                    )}
                    component={Link}
                    href={
                      "https://apps.apple.com/za/app/coach-efficient-microlearning/id1593632133" as const
                    }
                    platform={"nextjs"}
                    target={"_blank" as const}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___8ELnS)}
                      displayHeight={"45px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_coach_website/images/appStoreI1Svg.svg",
                        fullWidth: 300,
                        fullHeight: 105,
                        aspectRatio: 2.869565
                      }}
                    />
                  </p.PlasmicLink>
                </p.PlasmicLink>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___1GHC
                  )}
                  component={Link}
                  href={
                    "https://play.google.com/store/apps/details?id=com.konceptiva.coach" as const
                  }
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__x67Ij)}
                    displayHeight={"45px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_coach_website/images/googlePlayI1Svg.svg",
                      fullWidth: 300,
                      fullHeight: 94,
                      aspectRatio: 3.195652
                    }}
                  />
                </p.PlasmicLink>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7SfpJ)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8ZKw
                )}
              >
                {"FOLLOW US"}
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nhixm)}
              >
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__qgE4E
                  )}
                  component={Link}
                  href={"https://www.facebook.com/konceptiva" as const}
                  platform={"nextjs"}
                >
                  <FooterIconFbsvgIcon
                    className={classNames(projectcss.all, sty.svg__vs7Vl)}
                    role={"img"}
                  />
                </p.PlasmicLink>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___1VRKl
                  )}
                  component={Link}
                  href={"https://www.instagram.com/konceptiva/" as const}
                  platform={"nextjs"}
                >
                  <FooterIconInstagramsvgIcon
                    className={classNames(projectcss.all, sty.svg___0IJ2T)}
                    role={"img"}
                  />
                </p.PlasmicLink>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__wm1Zy
                  )}
                  component={Link}
                  href={
                    "https://www.linkedin.com/company/konceptiva-digital/" as const
                  }
                  platform={"nextjs"}
                >
                  <FooterIconLinkedinsvgIcon
                    className={classNames(projectcss.all, sty.svg__cD1Tc)}
                    role={"img"}
                  />
                </p.PlasmicLink>
              </p.Stack>
            </p.Stack>
          </p.Stack>
        </div>

        <div className={classNames(projectcss.all, sty.column__b8Y8M)}>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__iuKq)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__yo9Fx
              )}
            >
              {"Product"}
            </div>

            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link___0Tz3G
              )}
              component={Link}
              href={`/features`}
              platform={"nextjs"}
            >
              {"Features"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__uTd4L
              )}
              component={Link}
              href={`/who-is-it-for-managers`}
              platform={"nextjs"}
            >
              {"For Managers"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__ppsLy
              )}
              component={Link}
              href={`/who-is-it-for-instructional-designers`}
              platform={"nextjs"}
            >
              {"For IDs"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__xtMbu
              )}
              component={Link}
              href={`/who-is-it-for-ceos`}
              platform={"nextjs"}
            >
              {"For CEOs"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__ne0Np
              )}
              component={Link}
              href={`/who-is-it-for-employees`}
              platform={"nextjs"}
            >
              {"For Employees"}
            </p.PlasmicLink>
          </p.Stack>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.column__ihuHl)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__olsJm)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uo8Uf
              )}
            >
              {"INDUSTRIES"}
            </div>
          </p.Stack>

          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__lf1Qe
            )}
            component={Link}
            href={`/industry-consumer-electronics`}
            platform={"nextjs"}
          >
            {"Consumer Electronics"}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__gc6IZ
            )}
            component={Link}
            href={`/industry-manufacturing`}
            platform={"nextjs"}
          >
            {"Manufacturing"}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__fLnXj
            )}
            component={Link}
            href={`/industry-telecommunication`}
            platform={"nextjs"}
          >
            {"Telecom"}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__a0XNw
            )}
            component={Link}
            href={`/industry-pharmaceuticals`}
            platform={"nextjs"}
          >
            {"Pharmaceuticals"}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__p2Dqr
            )}
            component={Link}
            href={`/industry-luxury-goods`}
            platform={"nextjs"}
          >
            {"Luxury Goods"}
          </p.PlasmicLink>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.column__dY2Bl)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__eClH)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5VrR5
              )}
            >
              {"Company"}
            </div>
          </p.Stack>

          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link___6DRov
            )}
            component={Link}
            href={`/about-us`}
            platform={"nextjs"}
          >
            {"About Us"}
          </p.PlasmicLink>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__yqkbS
            )}
          >
            {"CoNTACT"}
          </div>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fHt9A)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__eFAJ)}
                displayHeight={"25px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"25px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_coach_website/images/coachIconPhonepng.png",
                  fullWidth: 61,
                  fullHeight: 62,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cfGrv
                )}
              >
                {"+38923113953"}
              </div>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__e66W3)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__eU)}
                displayHeight={"25px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"25px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_coach_website/images/coachIconMailpng.png",
                  fullWidth: 61,
                  fullHeight: 62,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lIdwl
                )}
              >
                {"contact@konceptiva.com"}
              </div>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d8Gk0)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__pbt3U)}
                displayHeight={"25px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"25px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_coach_website/images/coachIconCompanypng.png",
                  fullWidth: 61,
                  fullHeight: 62,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___61LDu
                )}
              >
                {"11 Oktomvri 24, 1000 Skopje, North Macedonia"}
              </div>
            </p.Stack>
          ) : null}
        </p.Stack>
      </p.Stack>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "columns"],
  columns: ["columns"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  columns: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFooter__VariantsArgs;
    args?: PlasmicFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicFooter__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),

    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
